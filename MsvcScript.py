import idaapifrom Msvc import MsvcInfoMsvcInfo = reload(MsvcInfo)import Msvc.Rtti.RttiScannerfrom Msvc.Rtti.TypeDescriptor import *from Msvc.Rtti.BaseClassDescriptor2 import *print "*" * 40print "dev_zzo's Uber MSVC Script!"print "*" * 40m = MsvcInfo.MsvcInfo()def rtti_td(ea) :	x = TypeDescriptor(ea)	m.rtti.typeDescriptors[ea] = xdef rtti_find_tds() :	Msvc.Rtti.RttiScanner.processTypeDescriptors(m.rtti)def hk_rtti_td() :	rtti_td(idaapi.get_screen_ea())def rtti_bcd(ea) :	x = BaseClassDescriptor2(ea)	m.rtti.baseClassDescriptors[ea] = x	x.resolve(m.rtti)def hk_rtti_bcd() :	rtti_bcd(idaapi.get_screen_ea())hk_ctx = idaapi.add_hotkey("Shift-Ctrl-T", hk_rtti_td)if hk_ctx is None:	print("Failed to register hotkey!")hk_ctx = idaapi.add_hotkey("Shift-Ctrl-B", hk_rtti_bcd)if hk_ctx is None:	print("Failed to register hotkey!")print "Use `m' to refer to a spawned MsvcInfo instance."