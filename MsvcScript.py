import idaapiimport Msvc.RttiMsvc.Rtti = reload(Msvc.Rtti)print "*" * 40print "dev_zzo's Uber MSVC Script!"print "*" * 40def rtti_scan() :    passdef rtti_td(ea) :    try :        print Msvc.Rtti.TypeDescriptor(ea)    except Exception, e:        print str(e)def hk_rtti_td() :    rtti_td(idaapi.get_screen_ea())def rtti_bcd(ea) :    try :        print Msvc.Rtti.BaseClassDescriptor(ea)    except Exception, e:        print str(e)def hk_rtti_bcd() :    rtti_bcd(idaapi.get_screen_ea())def rtti_chd(ea) :    try :        print Msvc.Rtti.ClassHierarchyDescriptor(ea)    except Exception, e:        print str(e)def hk_rtti_chd() :    rtti_chd(idaapi.get_screen_ea())def rtti_col(ea) :    try :        print Msvc.Rtti.CompleteObjectLocator(ea)    except Exception, e:        print str(e)def hk_rtti_col() :    rtti_col(idaapi.get_screen_ea())hk_ctx = idaapi.add_hotkey("Shift-Ctrl-Alt-T", hk_rtti_td)if hk_ctx is None:    print("Failed to register hotkey!")hk_ctx = idaapi.add_hotkey("Shift-Ctrl-Alt-B", hk_rtti_bcd)if hk_ctx is None:    print("Failed to register hotkey!")hk_ctx = idaapi.add_hotkey("Shift-Ctrl-Alt-H", hk_rtti_chd)if hk_ctx is None:    print("Failed to register hotkey!")hk_ctx = idaapi.add_hotkey("Shift-Ctrl-Alt-L", hk_rtti_col)if hk_ctx is None:    print("Failed to register hotkey!")